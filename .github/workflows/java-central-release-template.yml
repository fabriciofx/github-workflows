# SPDX-FileCopyrightText: Copyright (C) 2025 FabrÃ­cio Barros Cabral
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: java-central-release-template
'on':
  workflow_call:
    inputs:
      working-directory:
        description: "Set the working directory"
        required: false
        default: "."
        type: string
    secrets:
      release_keyname:
        description: "GPG key name"
        required: true
      release_passphrase:
        description: "GPG passphrase"
        required: true
      release_private_key:
        description: "GPG private key"
        required: true
      release_username:
        description: "Central token username"
        required: true
      release_password:
        description: "Central token password"
        required: true
defaults:
  run:
    shell: bash -xeuo pipefail {0}
permissions:
  actions: read
  security-events: write
  contents: read
jobs:
  java-central-release-template:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-17-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-17-maven-
      - name: Download and install xmlstarlet
        working-directory: ${{ inputs.working-directory }}
        run: |
          sudo apt-get -y -qq update
          sudo apt-get install -y -qq xmlstarlet
      - name: Configure GPG
        working-directory: ${{ inputs.working-directory }}
        env:
          PRIVATE_KEY: ${{ secrets.release_private_key }}
          PASSPHRASE: ${{ secrets.release_passphrase }}
          KEYNAME: ${{ secrets.release_keyname }}
          GPG_TTY: $(tty)
        run: |
          echo "${PRIVATE_KEY}" | gpg --batch --import
          echo "pinentry-mode loopback" >> "${HOME}/.gnupg/gpg.conf"
          gpgconf --launch gpg-agent
          echo "allow-loopback-pinentry" >> "${HOME}/.gnupg/gpg-agent.conf"
          gpgconf --reload gpg-agent
          # Bootstrapping: forces the key to be initialized and unlocked
          echo "test" | gpg --batch --yes --pinentry-mode loopback \
            --passphrase "${PASSPHRASE}" -u "${KEYNAME}" -o /dev/null -a --sign
      - name: Setup Maven settings.xml
        working-directory: ${{ inputs.working-directory }}
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.release_passphrase }}
          USERNAME: ${{ secrets.release_username }}
          PASSWORD: ${{ secrets.release_password }}
          KEYNAME: ${{ secrets.release_keyname }}
        run: |
          # Set settings.xml path
          settings="${HOME}/.m2/settings.xml"

          # Add 'central' server
          xmlstarlet ed -L \
            -s "/*[local-name()='settings']/*[local-name()='servers']" \
              -t elem -n "server" -v "" \
            -s "/*[local-name()='settings']/*[local-name()='servers']/server[last()]" \
              -t elem -n "id" -v "central" \
            -s "/*[local-name()='settings']/*[local-name()='servers']/server[last()]" \
              -t elem -n "username" -v "${USERNAME}" \
            -s "/*[local-name()='settings']/*[local-name()='servers']/server[last()]" \
              -t elem -n "password" -v "${PASSWORD}" \
            "${settings}"

          # Add 'gpg' profile
          xmlstarlet ed -L \
            -s "/*[local-name()='settings']" -t elem -n "profiles" -v "" \
            -s "/*[local-name()='settings']/*[local-name()='profiles']" \
              -t elem -n "profile" -v "" \
            -s "/*[local-name()='settings']/*[local-name()='profiles']/profile[last()]" \
              -t elem -n "id" -v "gpg" \
            -s "/*[local-name()='settings']/*[local-name()='profiles']/profile[last()]" \
              -t elem -n "properties" -v "" \
            -s "/*[local-name()='settings']/*[local-name()='profiles']/profile[last()]/properties" \
              -t elem -n "gpg.keyname" -v "${KEYNAME}" \
            "${settings}"
      - name: Release to Maven Central
        working-directory: ${{ inputs.working-directory }}
        run: |
          [[ -x "mvnw" ]] && mvn="./mvnw" || mvn="mvn"
          ${mvn} --errors --batch-mode deploy -Pcentral -Pgpg -DskipTests=true
