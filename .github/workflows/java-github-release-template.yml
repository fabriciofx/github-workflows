# SPDX-FileCopyrightText: Copyright (C) 2025 Fabr√≠cio Barros Cabral
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: java-github-release-template
'on':
  workflow_call:
    inputs:
      working-directory:
        description: "Set the working directory"
        required: false
        default: "."
        type: string
defaults:
  run:
    shell: bash -xeuo pipefail {0}
permissions:
  actions: read
  security-events: write
  contents: write
  packages: write
jobs:
  java-github-release-template:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Fix detached HEAD
        run: |
          git checkout -B "${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
      - name: Setup Java SDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Configure Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-17-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-jdk-17-maven-
      - name: Release to Github Packages
        working-directory: ${{ inputs.working-directory }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          [[ -x "mvnw" ]] && mvn="./mvnw" || mvn="mvn"
          ${mvn} --errors --batch-mode deploy -Pgithub -Dmaven.test.skip=true
      - name: Create GitHub Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Deploy binary artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: target/${{ github.event.repository.name }}-${{ github.ref_name }}.jar
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive
      - name: Deploy sources artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: target/${{ github.event.repository.name }}-${{ github.ref_name }}-sources.jar
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}-sources.jar
          asset_content_type: application/java-archive
      - name: Deploy javadoc artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: target/${{ github.event.repository.name }}-${{ github.ref_name }}-javadoc.jar
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}-javadoc.jar
          asset_content_type: application/java-archive
